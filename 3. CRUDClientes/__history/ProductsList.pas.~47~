unit ProductsList;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids, Data.DBXMySQL, Data.FMTBcd,
  Datasnap.DBClient, Data.SqlExpr, Datasnap.Provider, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TFrmProducts = class(TForm)
    Panel1: TPanel;
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    DBGrid1: TDBGrid;
    Button6: TButton;
    procedure FormCreate(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmProducts: TFrmProducts;

implementation

{$R *.dfm}

uses DMPrincipal;

procedure TFrmProducts.Button1Click(Sender: TObject);
begin
  DataModule2.DSProducts.DataSet.Refresh;
  Button2.Enabled := true;
  Button3.Enabled := true;
  Button4.Enabled := true;
end;

procedure TFrmProducts.Button2Click(Sender: TObject);
var
  QClientInsert: TSQLQuery;
begin
  QClientInsert := TSQLQuery.Create(nil);
  QClientInsert.SQLConnection := DataModule2.SQLConnection1;
  QClientInsert.Close;
  QClientInsert.SQL.Clear;
  QClientInsert.SQL.Add('INSERT INTO productos(nombre_producto, valor)');
  QClientInsert.SQL.Add('VALUES(:nombre_producto, :valor)');
  QClientInsert.ParamByName('nombre_producto').AsString := DataModule2.CDSProductsnombre_producto.AsString;
  QClientInsert.ParamByName('valor').AsFloat := DataModule2.CDSProductsvalor.AsFloat;
  QClientInsert.ExecSQL;
  ShowMessage('Registro creado exitosamente.!');
  Button2.Enabled := false;
end;

procedure TFrmProducts.Button3Click(Sender: TObject);
var
  QClientUpdate : TSQLQuery;
begin
  QClientUpdate := TSQLQuery.Create(nil);
  QClientUpdate.SQLConnection := DataModule2.SQLConnection1;
  QClientUpdate.Close;
  QClientUpdate.SQL.Clear;
  QClientUpdate.SQL.Add('UPDATE productos SET nombre_producto = :nombre_producto, valor = :valor');
  QClientUpdate.SQL.Add('WHERE producto = :producto');
  QClientUpdate.ParamByName('nombre_producto').AsString := DataModule2.CDSProductsnombre_producto.AsString;
  QClientUpdate.ParamByName('valor').AsFloat := DataModule2.CDSProductsvalor.AsFloat;
  QClientUpdate.ParamByName('producto').AsInteger := DataModule2.CDSProductsproducto.AsInteger;
  QClientUpdate.ExecSQL;
  ShowMessage('Registro modificado exitosamente.!');
  Button3.Enabled := false;
end;

procedure TFrmProducts.Button4Click(Sender: TObject);
var
  QClientDelete: TSQLQuery;
begin
  QClientDelete := TSQLQuery.Create(nil);
  QClientDelete.SQLConnection := DataModule2.SQLConnection1;
  QClientDelete.Close;
  QClientDelete.SQL.Clear;
  QClientDelete.SQL.Add('DELETE FROM productos');
  QClientDelete.SQL.Add('WHERE producto = :producto');
  QClientDelete.ParamByName('producto').AsInteger := DataModule2.CDSProductsproducto.AsInteger;
  QClientDelete.ExecSQL;
  ShowMessage('Registr eliminado exitosamente!');
  Button4.Enabled := false;
end;

procedure TFrmProducts.Button5Click(Sender: TObject);
begin
  Close;
end;

procedure TFrmProducts.Button6Click(Sender: TObject);
begin
  DataModule2.CDSProducts.Append;
end;

procedure TFrmProducts.FormCreate(Sender: TObject);
begin
  DataModule2.CDSProducts.Close;
  DataModule2.CDSProducts.Open;
end;

procedure TFrmProducts.FormShow(Sender: TObject);
begin
  Button2.Enabled := true;
  Button3.Enabled := true;
  Button4.Enabled := true;
end;

end.
